.flexbox-container {
  background-color: rgb(229, 255, 0);
  padding: 2px;
  display: flex;
  flex-direction: row;
  /* flex-direction: row-reverse; */
  /* flex-direction: column; */
  /* flex-direction: column-reverse; */

  flex-wrap: nowrap;
  /* When flex-wrap: nowrap, Irrespective of the width you give
  it will try to adjust all children in a single row or column
  depending on the flex-direction mentioned */

  flex-wrap: wrap;
  /* When flex-wrap: wrap, It takes the full width and if the screen width
   is less than the total width of children,
   it will try to come to the next row or column
   depending on the flex-direction mentioned */

  flex-flow: row nowrap;
  /* flex-flow is a short hand property
  syntax flex-flow: flex-direction flex-wrap; */
  height: 70vh;

  justify-content: center;
  justify-content: flex-start;
  justify-content: flex-end;
  justify-content: stretch;
  justify-content: space-between;
  justify-content: space-around;

  /* justify-content aligns content in horizontal
  direction and depending on the height given the 
  flex children will take up that height */

  align-content: stretch;
  /* For strech the flex-child-items will take up the full height */

  align-content: center;
  align-content: flex-start;
  align-content: flex-end;
  align-content: space-around;
  align-content: space-between;
  /* align-content aligns content in vertical
  direction and two show the difference(that is for
  flex-start, flex-end, center etc) flex-children
  will make itself smaller and will not take the height given */

  align-items: stretch;
  /* For strech the flex-child-items will take up the full height */

  align-items: center;
  align-items: flex-start;
  align-items: flex-end;
  /* align-items aligns content in vertical
  direction and two show the difference(that is for
  flex-start, flex-end, center etc) flex-children
  will make itself smaller and will not take the height given */

  /* The difference between align-items and (align-content and justify-content)
  is that align-items is used to align in vertical direction for a single line
  wheras align-content and justify-content is used to align content in vertical
  and horizontal direction respectively in multiple lines */
}

.flex-child {
  background-color: crimson;
  margin: 20px;
  padding: 20px;
  width: 200px;
  text-align: center;
}

/* order, flex-grow, flex-shrink, flex-basis and align-self are some
properties that you can use on the flex-child */

/* For flex-grow considering only three childs */

/* For flex-shrink considering 8 childs */

/* For flex-basis considering 4 child */

/* For align-self considering 3 child */

#flex-child-one {
  order: 2;

  /* flex-grow: 1; */
  /* Flex grow tells the ratio in which you want 
  the flex-child to strech in respect to the other childs
  to the rest of the screen */

  flex-shrink: 2;
  /* Flex grow tells the ratio in which you want 
  the flex-child to shrink in respect to the other childs
  to the rest of the screen 
  
  Flex shrink because it shrinks it can result in decrease in width
  but increase in height
  */

  align-self: flex-start;
  /* align-self is to align the flex-child along vertical direction */
}
#flex-child-two {
  order: 3;
  /* flex-grow: 1; */

  align-self: center;
  /* align-self is to align the flex-child along vertical direction */
}
#flex-child-three {
  order: 1;
  /* flex-grow: 3; */

  align-self: flex-end;
  /* align-self is to align the flex-child along vertical direction */
}

#flex-child-four {
  order: 4;

  flex-basis: 50%;
  /* flex-basis tells the initial width the flex-child must take up; */
}
